agents:
  queue: new-central
  modules: climacommon/2024_03_18 
env:
  experiment: experiments/surface_fluxes_perfect_model
steps:

  # - label: SF manual init
  #   command: julia --project=experiments/surface_fluxes_perfect_model -e 'import Pkg; Pkg.build("CalibrateAtmos"); Pkg.instantiate(;verbose=true); import CalibrateAtmos; include("experiments/surface_fluxes_perfect_model/generate_truth.jl"); CalibrateAtmos.initialize("surface_fluxes_perfect_model")'
  - label: init
    command: |
      echo $$experiment
      julia --project=$$experiment -e 'import Pkg; Pkg.build("CalibrateAtmos"); Pkg.instantiate(;verbose=true)'
      julia --project=$$experiment $$experiment/generate_truth.jl
      julia --project=$$experiment -e 'import CalibrateAtmos; CalibrateAtmos.initialize("surface_fluxes_perfect_model")'
    agents:
      slurm_cpus_per_task: 8
    env:
      JULIA_NUM_PRECOMPILE_TASKS: 8
      JULIA_MAX_NUM_PRECOMPILE_FILES: 50
  - wait

  - label: iter 0, member 1
    command: |
      srun julia --project=$$experiment -e '
        import CalibrateAtmos as CAL
        
        experiment_id = "surface_fluxes_perfect_model"
        i = 0
        member = 1

        include("experiments/$experiment_id/model_interface.jl")

        physical_model = CAL.get_forward_model(Val(Symbol(experiment_id)))
        config = CAL.get_config(physical_model, member, i, experiment_id)
        CAL.run_forward_model(physical_model, config)
      '
    agents:
      slurm_cpus_per_task: 8
      slurm_ntasks: 16
  - label: iter 0, member 2
    command: |
      srun julia --project=$$experiment -e '
        import CalibrateAtmos as CAL
        
        experiment_id = "surface_fluxes_perfect_model"
        i = 0
        member = 2

        include("experiments/$experiment_id/model_interface.jl")

        physical_model = CAL.get_forward_model(Val(Symbol(experiment_id)))
        config = CAL.get_config(physical_model, member, i, experiment_id)
        CAL.run_forward_model(physical_model, config)
      '
    agents:
      slurm_cpus_per_task: 8
      slurm_ntasks: 16
  - wait
  
  - label: update after iter 0
    command: |
      julia --project=experiments/$experiment_id -e '
        import CalibrateAtmos as CAL

        experiment_id = "surface_fluxes_perfect_model"
        i = 0
        include("experiments/$experiment_id/model_interface.jl")
        G_ensemble = CAL.observation_map(Val(Symbol(experiment_id)), i)
        CAL.save_G_ensemble(experiment_id, i, G_ensemble)
        CAL.update_ensemble(experiment_id, i)
      '
  